{"version":3,"sources":["contexts/context.js","utils/constants.js","utils/api.js","utils/auth.js","components/Login.js","components/Task.js","components/TaskList.js","components/TaskForm.js","components/TaskEdit.js","components/Sorting.js","components/Pagination.js","components/Main.js","components/AppRouter.js","components/NavBar.js","components/App.js","index.js"],"names":["AppContext","createContext","requestParams","localStorage","getItem","baseUrl","headers","userName","Api","this","_baseUrl","_headers","_userName","res","ok","json","Promise","reject","Error","status","pageNumber","sortField","sortDirection","a","sortOptions","fetch","method","_getResponseData","username","email","text","formData","FormData","append","body","id","token","api","auth","password","then","_handleResponse","Login","history","useHistory","setIsAuth","useContext","useState","setUsername","setPassword","isNameValid","setIsNameValid","isPassValid","setIsPassValid","nameValidationMessage","setNameValidationMessage","passValidationMessage","setPassValidationMessage","isProfileFormValid","setIsProfileFormValid","useEffect","className","onSubmit","evt","preventDefault","login","data","message","console","log","setItem","JSON","stringify","push","catch","err","target","reset","name","type","minLength","maxLength","value","onChange","checkValidity","validationMessage","required","disabled","Task","editTask","isAuth","onClick","style","href","TaskList","tasks","onEdit","map","task","TaskForm","setEmail","setMessage","showForm","setShowForm","isEmailValid","setIsEmailValid","emailValidationMessage","setEmailValidationMessage","isTaskFormValid","setIsTaskFormValid","TaskEdit","clearTask","setNeedUpdate","newStatus","setNewStatus","heading","setHeading","parse","correctStatus","changeTask","checked","Sorting","setSortField","setSortDirection","e","Pagination","taskTotal","setPageNumber","Main","header","taskToEdit","setTaskToEdit","AppRouter","exact","path","component","NavBar","onLogout","to","App","tasksLength","setTasksLength","taskMessage","setTaskMessage","taskList","setTaskList","needUpdate","getTasks","length","Number","total_task_count","Provider","removeItem","createTask","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.8bd24df0.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst AppContext = createContext(null);\r\n\r\nexport default AppContext;\r\n","const token = localStorage.getItem('token');\r\n/* eslint-disable */\r\nconst jwtToken = token ? token : '';\r\nconst USER_NAME = '/?developer=sumere4ny';\r\n\r\n/* eslint-disable */\r\n\r\nconst requestParams = {\r\n  baseUrl: \"https://uxcandy.com/~shapoval/test-task-backend/v2\",\r\n  headers: {\r\n    // \"Mime-Type\": \"multipart/form-data\",\r\n    // \"Authorization\": jwtToken,\r\n  },\r\n  userName: USER_NAME,\r\n};\r\n\r\nexport default requestParams;\r\n","import requestParams from './constants';\r\n\r\nclass Api {\r\n  constructor({ baseUrl, headers, userName }) {\r\n    /* eslint-disable */\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers;\r\n    this._userName = userName;\r\n  }\r\n\r\n  // Общий обработчик запросов\r\n  _getResponseData(res) {\r\n    if (!res.ok) {\r\n      return Promise.reject(new Error(`Ошибка: ${res.status}`));\r\n    }\r\n    return res.json();\r\n  }\r\n\r\n  // Получаем массив уже существующих задач\r\n  async getTasks(pageNumber, sortField, sortDirection) {\r\n    let sortOptions = sortField\r\n      ? `&sort_field=${sortField}` + `&sort_direction=${sortDirection}`\r\n      : '';\r\n    const res = await fetch(this._baseUrl + this._userName + `&page=${pageNumber}` + sortOptions, {\r\n      headers: this._headers,\r\n      method: 'GET',\r\n    });\r\n    return this._getResponseData(res);\r\n  }\r\n\r\n  // Создание и изменение задачи\r\n  async createTask({ username, email, text }) {\r\n    const formData = new FormData();\r\n    formData.append('username', username);\r\n    formData.append('email', email);\r\n    formData.append('text', text);\r\n    const res = await fetch(`${this._baseUrl}/create${this._userName}`, {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: formData,\r\n    });\r\n    return this._getResponseData(res);\r\n  }\r\n\r\n  async changeTask({ id, text, status, token }) {\r\n    const formData = new FormData();\r\n    formData.append('status', status);\r\n    formData.append('token', token);\r\n    formData.append('text', text);\r\n    const res = await fetch(`${this._baseUrl}/edit/${id}` + this._userName, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: formData,\r\n    });\r\n    return this._getResponseData(res);\r\n  }\r\n}\r\n\r\nexport const api = new Api(requestParams);\r\n","import requestParams from './constants';\r\n/* eslint-disable */\r\nclass Auth {\r\n  constructor({ baseUrl, headers, userName }) {\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers;\r\n    this._userName = userName;\r\n  }\r\n\r\n  _handleResponse(res) {\r\n    if (!res.ok) {\r\n      return Promise.reject(new Error(`Ошибка: ${res.status}`));\r\n    }\r\n    return res.json();\r\n  }\r\n\r\n  login({ username, password }) {\r\n    const formData = new FormData();\r\n    formData.append('username', username);\r\n    formData.append('password', password);\r\n    return fetch(`${this._baseUrl}/login` + this._userName, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: formData,\r\n    }).then(this._handleResponse);\r\n  }\r\n}\r\n\r\nexport const auth = new Auth(requestParams);\r\n","import { useState, useEffect, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AppContext from '../contexts/context';\r\nimport { auth } from '../utils/auth';\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n  const { setIsAuth } = useContext(AppContext);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isNameValid, setIsNameValid] = useState(true);\r\n  const [isPassValid, setIsPassValid] = useState(true);\r\n  const [nameValidationMessage, setNameValidationMessage] = useState('');\r\n  const [passValidationMessage, setPassValidationMessage] = useState('');\r\n  const [isProfileFormValid, setIsProfileFormValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    function checkProfileFormValidity() {\r\n      if (isNameValid && isPassValid) {\r\n        setIsProfileFormValid(true);\r\n      } else {\r\n        setIsProfileFormValid(false);\r\n      }\r\n    }\r\n    checkProfileFormValidity();\r\n  }, [isNameValid, isPassValid]);\r\n\r\n  function handleNameChange(evt) {\r\n    setUsername(evt.target.value);\r\n    setIsNameValid(evt.target.checkValidity());\r\n    setNameValidationMessage(evt.target.validationMessage);\r\n  }\r\n\r\n  function handlePassChange(evt) {\r\n    setPassword(evt.target.value);\r\n    setIsPassValid(evt.target.checkValidity());\r\n    setPassValidationMessage(evt.target.validationMessage);\r\n  }\r\n\r\n  function hanleClearInputs() {\r\n    setPassword('');\r\n    setUsername('');\r\n  }\r\n\r\n  function setAuthToken(data) {\r\n    localStorage.setItem('token', JSON.stringify(data));\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    if (!(username || password)) {\r\n      return;\r\n    }\r\n    auth.login({ username, password })\r\n      .then(({ status, message }) => {\r\n        // eslint-disable-next-line\r\n        console.log(status);\r\n        if (status === 'ok') {\r\n          setAuthToken(message.token);\r\n          setIsAuth(true);\r\n          history.push('/');\r\n        } else {\r\n          setNameValidationMessage(message.username);\r\n          setPassValidationMessage(message.password);\r\n        }\r\n      })\r\n      // eslint-disable-next-line\r\n      .catch((err) => console.log(err));\r\n    hanleClearInputs();\r\n    evt.target.reset();\r\n  }\r\n\r\n  return (\r\n    <main className=\"main__content main__content_login\">\r\n      <h1>Авторизация</h1>\r\n      <form className=\"login__form\" onSubmit={handleSubmit}>\r\n        <label>Имя пользователя</label>\r\n        <input\r\n          name=\"username\"\r\n          id=\"username\"\r\n          type=\"text\"\r\n          minLength=\"2\"\r\n          maxLength=\"20\"\r\n          value={username}\r\n          onChange={handleNameChange}\r\n          required />\r\n        <span id='username-error' className='task__form_input-error'>{nameValidationMessage}</span>\r\n        <label>Пароль</label>\r\n        <input\r\n          name=\"password\"\r\n          id=\"password\"\r\n          type=\"password\"\r\n          /* pattern=\"[a-zA-Z0-9]{1,15}\" */\r\n          minLength=\"2\"\r\n          maxLength=\"20\"\r\n          value={password}\r\n          onChange={handlePassChange}\r\n          required />\r\n        <span id='password-error' className='task__form_input-error'>{passValidationMessage}</span>\r\n        <button className=\"task__submit\" type=\"submit\" disabled={!isProfileFormValid}>Отправить</button>\r\n      </form>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import { useContext } from 'react';\r\nimport AppContext from '../contexts/context';\r\n\r\nfunction Task({\r\n  username, message, status, email, id, editTask,\r\n}) {\r\n  /* eslint-disable */\r\n  const taskList = {\r\n    0: 'задача не выполнена',\r\n    1: 'задача не выполнена, отредактирована админом',\r\n    10: 'задача выполнена',\r\n    11: 'задача отредактирована админом и выполнена',\r\n  }\r\n\r\n  const { isAuth } = useContext(AppContext);\r\n\r\n  const handleTaskEdit = () => {\r\n    // showTaskEditForm();\r\n    editTask({ id, status, text: message, email, username })\r\n  }\r\n\r\n  return (\r\n    <div className={`tasklist__task ${status >= 10 && 'tasklist__task_done'}`}>\r\n      {isAuth && <div className=\"tasklist__task_edit\" onClick={handleTaskEdit}></div>}\r\n      <div className=\"task__status\"><p>Статус задачи: {taskList[status]}</p></div>\r\n      <h2 style={{ 'textAlign': 'center' }}>Имя пользователя: {username}</h2>\r\n      <p>Email: <a href={`mailto: ${email}`}>{email}</a></p>\r\n      <p>Описание</p>\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","import Task from './Task';\r\n\r\nfunction TaskList({ tasks, onEdit }) {\r\n  return (\r\n    <>\r\n      {tasks.map((task) => <Task\r\n      username={task.username}\r\n      message={task.text}\r\n      status={task.status}\r\n      email={task.email}\r\n      key={task.id}\r\n      id={task.id}\r\n      editTask={onEdit} />)}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TaskList;\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction TaskForm({ onSubmit }) {\r\n  const [email, setEmail] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [isNameValid, setIsNameValid] = useState(true);\r\n  const [isEmailValid, setIsEmailValid] = useState(true);\r\n  const [nameValidationMessage, setNameValidationMessage] = useState('');\r\n  const [emailValidationMessage, setEmailValidationMessage] = useState('');\r\n  const [isTaskFormValid, setIsTaskFormValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    function checkTaskFormValidity() {\r\n      if (isNameValid && isEmailValid && username && email) {\r\n        setIsTaskFormValid(true);\r\n      } else {\r\n        setIsTaskFormValid(false);\r\n      }\r\n    }\r\n    checkTaskFormValidity();\r\n  }, [username, email, isNameValid, isEmailValid]);\r\n\r\n  useEffect(() => {\r\n    if (showForm) {\r\n      setNameValidationMessage('');\r\n      setEmailValidationMessage('');\r\n      setIsNameValid(true);\r\n      setIsEmailValid(true);\r\n    }\r\n  }, [showForm]);\r\n\r\n  function handleNameChange(evt) {\r\n    setUsername(evt.target.value);\r\n    setIsNameValid(evt.target.checkValidity());\r\n    setNameValidationMessage(evt.target.validationMessage);\r\n  }\r\n\r\n  function handleEmailChange(evt) {\r\n    setEmail(evt.target.value);\r\n    setIsEmailValid(evt.target.checkValidity());\r\n    setEmailValidationMessage(evt.target.validationMessage);\r\n  }\r\n\r\n  function handleMessageChange(evt) {\r\n    setMessage(evt.target.value);\r\n  }\r\n\r\n  function handleShowForm() {\r\n    setShowForm(!showForm);\r\n  }\r\n\r\n  function hanleClearInputs() {\r\n    setEmail('');\r\n    setUsername('');\r\n    setMessage('');\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    if (!(username || email)) {\r\n      return;\r\n    }\r\n    onSubmit({\r\n      email,\r\n      username,\r\n      text: message,\r\n    });\r\n    hanleClearInputs();\r\n    evt.target.reset();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"button__show-form\"\r\n        onClick={handleShowForm}>{showForm ? 'Скрыть форму' : 'Добавить задачу'}</div>\r\n      <form className={`task__form ${showForm && 'task__form_visible'}`} onSubmit={handleSubmit}>\r\n        <label>Имя пользователя</label>\r\n        <input\r\n          name=\"username\"\r\n          id=\"username\"\r\n          type=\"text\"\r\n          minLength=\"2\"\r\n          maxLength=\"20\"\r\n          value={username}\r\n          onChange={handleNameChange}\r\n          required />\r\n        <span id='username-error' className='task__form_input-error'>{nameValidationMessage}</span>\r\n        <label>E-mail</label>\r\n        <input\r\n          name=\"email\"\r\n          id=\"email\"\r\n          type=\"email\"\r\n          minLength=\"5\"\r\n          maxLength=\"20\"\r\n          value={email}\r\n          onChange={handleEmailChange}\r\n          required />\r\n        <span id='email-error' className='task__form_input-error'>{emailValidationMessage}</span>\r\n        <label>Сообщение</label>\r\n        <textarea name=\"message\" type=\"text\" onChange={handleMessageChange} />\r\n        <button className=\"task__submit\" type=\"submit\"\r\n          disabled={!isTaskFormValid}>Создать</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TaskForm;\r\n","import { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AppContext from '../contexts/context';\r\nimport { api } from '../utils/api';\r\n/* eslint-disable */\r\nfunction TaskEdit({ task, clearTask }) {\r\n  const history = useHistory();\r\n  const { setIsAuth, setNeedUpdate } = useContext(AppContext);\r\n  const [message, setMessage] = useState(task.text);\r\n  const [newStatus, setNewStatus] = useState(task.status);\r\n  const [heading, setHeading] = useState('Изменить статус и текст');\r\n  const token = JSON.parse(localStorage.getItem('token'));\r\n\r\n  function handleMessageChange(evt) {\r\n    setMessage(evt.target.value);\r\n  }\r\n\r\n  function hanleClearInputs() {\r\n    setNewStatus(null);\r\n    setMessage('');\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    let correctStatus = newStatus;\r\n    if (token) {\r\n      if ( (task.status === 1\r\n        || task.status === 11)\r\n        && newStatus !== task.status ) {\r\n        correctStatus = newStatus + 1;\r\n      } else if (message !== task.text) {\r\n        correctStatus = newStatus + 1;\r\n      }\r\n      console.log(correctStatus);\r\n      api.changeTask({\r\n        token,\r\n        id: task.id,\r\n        status: correctStatus,\r\n        text: message,\r\n      })\r\n      .then(({ status, message }) => {\r\n        if (status === 'ok') {\r\n          setHeading('Успешно');\r\n          setNeedUpdate(true);\r\n          clearTask();\r\n        } else {\r\n          setHeading(message);\r\n          setIsAuth(false);\r\n          history.push('/login');\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n    } else {\r\n      setHeading('Токен не найден');\r\n      history.push('/login');\r\n    }\r\n    hanleClearInputs();\r\n    evt.target.reset();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form className='task__form task__form_visible' onSubmit={handleSubmit}>\r\n      <h2>{heading}</h2>\r\n      <p>Имя пользователя: {task.username}</p>\r\n      <p>Email: <a href={`mailto: ${task.email}`}>{task.email}</a></p>\r\n      <label className=\"form-check-label\">Выполнено</label>\r\n        <input type=\"checkbox\"\r\n          className=\"task__input\"\r\n          checked={newStatus === 10 || newStatus === 11}\r\n          onChange={() => setNewStatus(newStatus === 10 ? 0 : 10)}\r\n        />\r\n        <label>Сообщение</label>\r\n        <textarea name=\"message\" type=\"text\"\r\n          value={message}\r\n          onChange={handleMessageChange} />\r\n        <button className=\"task__submit\" type=\"submit\">Изменить</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TaskEdit;\r\n","import { useContext } from 'react';\r\nimport AppContext from '../contexts/context';\r\n\r\nconst Sorting = () => {\r\n  const { setSortField, setSortDirection } = useContext(AppContext);\r\n\r\n  return (\r\n    <div className=\"sort\">\r\n      <div>Сортировать</div>\r\n      <select\r\n        onChange={(e) => setSortField(e.target.value)}\r\n      >\r\n        <option value=\"id\">id</option>\r\n        <option value=\"username\">username</option>\r\n        <option value=\"email\">email</option>\r\n        <option value=\"status\">status</option>\r\n      </select>\r\n      <select\r\n        onChange={(e) => setSortDirection(e.target.value)}\r\n      >\r\n        <option value=\"asc\">По возрастанию</option>\r\n        <option value=\"desc\">По убыванию</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sorting;\r\n","import { useContext } from 'react';\r\nimport AppContext from '../contexts/context';\r\n\r\nconst Pagination = ({ taskTotal }) => {\r\n  const { pageNumber, setPageNumber } = useContext(AppContext);\r\n\r\n  if (taskTotal <= 3) return null;\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      <button\r\n        onClick={() => setPageNumber(pageNumber - 1)}\r\n        disabled={pageNumber === 1}\r\n      >\r\n        Назад\r\n      </button>\r\n      <div>Страница {pageNumber}</div>\r\n      <button\r\n        onClick={() => setPageNumber(pageNumber + 1)}\r\n        disabled={pageNumber * 3 >= taskTotal}\r\n      >\r\n        Дальше\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import { useState } from 'react';\r\nimport TaskList from './TaskList';\r\nimport TaskForm from './TaskForm';\r\nimport TaskEdit from './TaskEdit';\r\nimport Sorting from './Sorting';\r\nimport Pagination from './Pagination';\r\n\r\nconst Main = ({\r\n  tasks,\r\n  taskTotal,\r\n  header,\r\n  onSubmit,\r\n}) => {\r\n  const [taskToEdit, setTaskToEdit] = useState();\r\n\r\n  const handleEdit = (task) => {\r\n    setTaskToEdit(task);\r\n  };\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <div className=\"main__content\">\r\n        <h1>{header}</h1>\r\n        <Sorting />\r\n        <TaskList tasks={tasks} onEdit={handleEdit} />\r\n        <Pagination taskTotal={taskTotal} />\r\n      </div>\r\n      <div className=\"main__sidebar\">\r\n        <TaskForm onSubmit={onSubmit} />\r\n        {taskToEdit && <TaskEdit task={taskToEdit} clearTask={() => setTaskToEdit()} />}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { Switch, Route } from 'react-router-dom';\r\nimport Login from './Login';\r\nimport Main from './Main';\r\n\r\nconst AppRouter = ({\r\n  tasks,\r\n  taskTotal,\r\n  onSubmit,\r\n  header,\r\n}) => (\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Main\r\n            tasks={tasks}\r\n            taskTotal={taskTotal}\r\n            onSubmit={onSubmit}\r\n            header={header}\r\n          />\r\n        </Route>\r\n        <Route path=\"/login\" component={ Login } />\r\n      </Switch>\r\n);\r\n\r\nexport default AppRouter;\r\n","import { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AppContext from '../contexts/context';\r\n\r\nconst NavBar = ({ onLogout }) => {\r\n  const { isAuth } = useContext(AppContext);\r\n\r\n  return (\r\n  <nav className=\"navigation__bar\">\r\n  <Link className=\"navigation__link\" to=\"/\">Задачи</Link>\r\n  {isAuth ? <Link className=\"navigation__link\" onClick={onLogout} to=\"/\">Выйти</Link>\r\n    : <Link className=\"navigation__link\" to=\"/login\">Войти</Link>}\r\n  </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useEffect, useState } from 'react';\r\nimport AppContext from '../contexts/context';\r\nimport { api } from '../utils/api';\r\nimport AppRouter from './AppRouter';\r\nimport NavBar from './NavBar';\r\n\r\n/* eslint-disable */\r\n\r\nfunction App() {\r\n  const [isAuth, setIsAuth] = useState(false);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [sortField, setSortField] = useState(null);\r\n  const [sortDirection, setSortDirection] = useState(null);\r\n  const [tasksLength, setTasksLength] = useState(0);\r\n  const [taskMessage, setTaskMessage] = useState('');\r\n  const [taskList, setTaskList] = useState([]);\r\n  const [needUpdate, setNeedUpdate] = useState(false);\r\n\r\n  useEffect(() => {\r\n    api.getTasks(pageNumber, sortField, sortDirection)\r\n      .then(({ status, message }) => {\r\n        if (status == 'ok') {\r\n          setTaskList([...message.tasks]);\r\n          setTaskMessage(message.tasks.length\r\n            ? 'Список задач:' : 'Задач пока нет!');\r\n          setTasksLength(Number(message.total_task_count));\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n      setNeedUpdate(false);\r\n  }, [pageNumber, tasksLength, sortField, sortDirection, needUpdate]);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem('token')) {\r\n      setIsAuth(true);\r\n    }\r\n  }, []);\r\n\r\n  function handleTaskSubmit(task) {\r\n    console.log(task);\r\n    setTaskList([...taskList, task]);\r\n    api.createTask(task)\r\n    .then(({ status, message }) => {\r\n      console.log(message);\r\n      if (status == 'ok') {\r\n        setTaskMessage('Успешно добавлено');\r\n        setTasksLength(tasksLength + 1);\r\n      } else {\r\n        setTaskMessage('Ошибка добавления');\r\n      }\r\n    })\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  function handleLogout() {\r\n    localStorage.removeItem('token');\r\n    setIsAuth(false);\r\n  }\r\n\r\n  return (\r\n    <AppContext.Provider value={{\r\n      isAuth,\r\n      setIsAuth,\r\n      pageNumber,\r\n      setPageNumber,\r\n      setNeedUpdate,\r\n      setSortField,\r\n      setSortDirection,\r\n    }}>\r\n      <NavBar onLogout={handleLogout} />\r\n      <AppRouter\r\n        tasks={taskList}\r\n        taskTotal={tasksLength}\r\n        onSubmit={handleTaskSubmit}\r\n        header={taskMessage} />\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './components/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}